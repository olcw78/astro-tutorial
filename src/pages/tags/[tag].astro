---
import BlogPost from "../../components/BlogPost.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
interface Paths {
  tag: string;
}

export async function getStaticPaths() {
  let allPosts: readonly any[];
  let uniqueTags: readonly string[];
  try {
    allPosts = await Astro.glob("../posts/*.md");
    uniqueTags = Array.from(
      new Set(
        allPosts
          .map((post) => post.frontmatter.tags)
          .flat())
    );

  } catch (error: Error) {
    console.error(error);

    return { params: null };
  }

  return uniqueTags.map((tag) => {
    const filteredPostsByTag = allPosts?.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPostsByTag }
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
    <p>Page tagged with {tag}</p>
    <ul>
      {posts?.map((post) =>
              <BlogPost url={post.url} title={post.frontmatter.title}/>)
      }
    </ul>
</BaseLayout>